// OPTIMUM APPROACH
// TC: O(N)
// SC: O(1)

int celebrity(vector<vector<int> >& M, int n) {

  stack<int> celebrityStack;

  for(int i = 0; i < n; i++)
    celebrityStack.push(i);

  while(celebrityStack.size() >= 2) {

    int p1 = celebrityStack.top();
    celebrityStack.pop();
    
    int p2 = celebrityStack.top();
    celebrityStack.pop();
    
    if(M[p1][p2]) {
      celebrityStack.push(p2);
    }
    
    else {
      celebrityStack.push(p1);
    }
  }

  int potentialCeleb = celebrityStack.top();

  for(int i = 0; i < n; i++) {
    if(i != potentialCeleb) {
      if(M[i][potentialCeleb] == 0 || M[potentialCeleb][i] == 1) {
          potentialCeleb = -1;
          return -1;
      }
    }
  }
 
  return potentialCeleb;
}